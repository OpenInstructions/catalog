catalog_version: "0.1.0"
version: "0.1.0"
title: "Go CLI Documentation"
description: "Create comprehensive documentation for your Go CLI application"

context:
  instruction_type: "documentation"
  applicable_to: "Go CLI projects with Cobra framework"
  summary: "Create clear and comprehensive documentation for users and developers."
  preconditions:
    - "Go CLI project with core functionality implemented"
  postconditions:
    - "Comprehensive user documentation"
    - "API documentation for developers"
    - "Well-structured README"

tasks:
  - id: "update_help_text"
    title: "Update command help text"
    description: "Enhance the CLI's built-in help text"
    steps:
      - "Update root command help text in `cmd/myapp/cmd/root.go`:"
      - |
        ```go
        var rootCmd = &cobra.Command{
          Use:   "myapp",
          Short: "A brief description of your application",
          Long: `A CLI application for managing resources.
          
        MyApp provides a command-line interface for managing and interacting
        with resources. It supports various commands for creating, retrieving,
        updating, and deleting resources, as well as additional utilities.`,
          // ... rest of the command
        }
        ```
      - "Update help text for each subcommand with clear descriptions and examples"
    acceptance_criteria:
      - "All commands have clear help text and examples"
    
  - id: "create_markdown_docs"
    title: "Create markdown documentation"
    description: "Create documentation in markdown format"
    steps:
      - "Create a docs directory structure with these files:"
      - "- `docs/README.md` - Documentation overview"
      - "- `docs/installation.md` - Installation instructions"
      - "- `docs/commands/README.md` - Commands reference"
      - "- `docs/examples.md` - Usage examples"
    acceptance_criteria:
      - "Markdown documentation created with key topics"
    
  - id: "update_readme"
    title: "Update main README"
    description: "Update the project README"
    steps:
      - "Update `README.md` with:"
      - "- Project description and badges"
      - "- Quick installation instructions"
      - "- Basic usage examples"
      - "- Links to documentation"
    acceptance_criteria:
      - "README updated with essential information"
    
  - id: "add_godoc_comments"
    title: "Add GoDoc comments"
    description: "Add documentation comments to exported code"
    steps:
      - "Add GoDoc comments to all exported types and functions"
      - "Add package-level documentation to all packages"
      - "Include examples for key functions"
    acceptance_criteria:
      - "Code documentation comments added"
    
  - id: "setup_generated_docs"
    title: "Set up command documentation generation"
    description: "Automatically generate command documentation"
    steps:
      - "Create a docs command in `cmd/myapp/cmd/docs.go` to generate documentation"
      - "Set up automatic generation of man pages and markdown docs"
    acceptance_criteria:
      - "Documentation generation command implemented"

examples:
  - title: "Command Help Example"
    description: "Example output from the CLI help command"
    content: |
      ```
      A CLI application for managing resources.
              
      MyApp provides a command-line interface for managing and interacting
      with resources.

      Usage:
        myapp [command]

      Available Commands:
        completion  Generate the autocompletion script
        create      Create a new resource
        get         Get a resource
        help        Help about any command
        version     Print the version information

      Flags:
        --config string      config file (default is $HOME/.myapp.yaml)
        -h, --help           help for myapp
        --log-level string   Set log level (debug, info, warn, error)
        -o, --output string  Output format (text, json, yaml, table)

      Use "myapp [command] --help" for more information about a command.
      ```

  - title: "Documentation Structure"
    description: "Example documentation file structure"
    content: |
      ```
      docs/
      ├── README.md                 # Documentation overview
      ├── installation.md           # Installation guide
      ├── getting-started.md        # Getting started guide
      ├── configuration.md          # Configuration options
      ├── commands/                 # Command documentation
      │   ├── README.md             # Commands overview
      │   ├── create.md             # Create command details
      │   └── get.md                # Get command details
      └── examples.md               # Usage examples
      ``` 